trigger:
  - main

strategy:
  matrix:
    linux-gcc:
      imageName: 'ubuntu-latest'
      preset: Linux-GCC-Release
      install-depends: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install ninja-build libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config gcc-13 g++-13
      set-compiler-version: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 10
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 10
      visual-studio-dir:

    linux-llvm:
      imageName: 'ubuntu-latest'
      preset: Linux-LLVM-Release
      install-depends: |
        sudo apt-get install ninja-build libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 17
      set-compiler-version: |
        sudo rm /usr/bin/clang
        sudo rm /usr/bin/clang++
        sudo ln -s /usr/bin/clang-17 /usr/bin/clang
        sudo ln -s /usr/bin/clang++-17 /usr/bin/clang++
      visual-studio-dir:

    windows:
      imageName: 'windows-latest'
      preset: Windows-MSVC-Release
      install-depends: choco install ninja
      set-compiler-version:
      visual-studio-dir: C:\Program Files\Microsoft Visual Studio\2022\Enterprise

pool:
  vmImage: $(imageName)

variables:
- name: VCPKG_BINARY_SOURCES
  value: 'clear;nuget,https://pkgs.dev.azure.com/natecheadle/CMakeCPPTemplate/_packaging/PIPELINE_CACHE/nuget/v3/index.json,readwrite'

- name: GTEST_OUTPUT
  value: 'xml:$(System.DefaultWorkingDirectory)/TEST-REPORT.xml'

steps:
- task: BatchScript@1
  inputs:
    filename: '$(visual-studio-dir)\Common7\Tools\VsDevCmd.bat'
    arguments: '-arch=amd64'
    modifyEnvironment: true
  displayName: "Initialize Visual Studio Environment"
  condition: eq( variables['Agent.OS'], 'Windows_NT' )

- script: $(install-depends)
  displayName: "Install Dependencies"

- script: $(set-compiler-version)
  displayName: "Configure Compiler Version"

- task: NuGetCommand@2
  displayName: "Configure API Key"
  inputs:
    command: 'custom'
    arguments: setapikey "AzureDevops" -source "https://pkgs.dev.azure.com/natecheadle/IgnosiGameEngine/_packaging/VCPKG_CACHE/nuget/v3/index.json"

- task: NuGetAuthenticate@1
  displayName: "Autheticate to Artifact Feed"

- task: CMake@1
  displayName: "Configure All"
  inputs:
    workingDirectory: '.' 
    cmakeArgs: --preset $(preset) -DCMAKE_TOOLCHAIN_FILE=$(VCPKG_INSTALLATION_ROOT)/scripts/buildsystems/vcpkg.cmake -B$(Build.BinariesDirectory) 

- task: CMake@1
  displayName: "Build All"
  inputs:
    workingDirectory: '.' 
    cmakeArgs: --build $(Build.BinariesDirectory) 
    
- script: $(Build.BinariesDirectory)/test/my-test-app
  displayName: "Run Unit Tests"

- task: PublishTestResults@2
  displayName: "Publish Test Results"
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TEST-*.xml' 
